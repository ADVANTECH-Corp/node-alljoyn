
Copyright (c) 2012-2013, AllSeen Alliance. All rights reserved.

   Permission to use, copy, modify, and/or distribute this software for any
   purpose with or without fee is hereby granted, provided that the above
   copyright notice and this permission notice appear in all copies.

   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

+------------------------------------------------------------------------------+
|                                                                              |
| iOS Project Template README file                                             |
|                                                                              |
+------------------------------------------------------------------------------+

This is a template of a basic project that includes both an AllJoyn client and
an AllJoyn service skeleton to assist you in rapidly developing an AllJoyn-based
App for iOS. Also included in the AllJoyn SDK is a code generator that allows
you to describe your AllJoyn objects in an XML file and create the Objective-C and
C++ code necesary to implement them. In this template project the file containing
the object model is named SampleAllJoynObjectModel.xml. The code generator is used to then
create the AJNSampleObject.h/.m and SampleObject.h/.m files automatically for 
you. The generated files contain both client and service side implementations 
of the objects described in SampleAllJoynObjectModel.xml. For more information on
the format of the XML file, see the D-Bus specification at:

http://dbus.freedesktop.org/doc/dbus-specification.html#introspection-format

A Run Script build rule is enabled for the AllJoyn iOS Project Template target
of the project. This build rule will fire off the code generator, passing all
needed arguments to it so that your AllJoyn source files will be emitted.
If you change the name of the XML file or want to change the name of
the generated files, then you must change the build rule script. See the 
SampleCodeGeneratorScript.sh file as well.

AJNSampleObject.h/.m
- Contains autogenerated code for AllJoyn interoperability
- DO NOT EDIT. Caveat: Edit at your own risk. If you run the code generator, then
  any changes will be lost.
- Contains client side of the AllJoyn object implementation, including a proxy
  object to be used to communicate across the network with the service.

SampleObject.h/.m
- Contains autogenerated code for AllJoyn interoperability
- This is the service side of an AllJoyn object implementation. You DO edit this
  to fill in your implementation of the service's methods, properties and signals.
- Careful though, if you edit the file and run the code generator, your changes
  will be lost.
  
SampleClient.h/.m
- A sample implementation of the client-side AllJoyn code needed to consume a
  service.
  
SampleService.h/.m
- A sample implementation of the service-side AllJoyn code needed to expose a
service on an AllJoyn bus.
  
The unit test project included has a single simple test that verifies the client can call 
the service and receive a response from the service. If you want to set some breakpoints
and go spelunking through the AllJoyn language binding for Objective-C, start there.

