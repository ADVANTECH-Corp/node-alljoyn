# Copyright AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('env', 'cobjs')
local_env = env.Clone()

srcs = ['ServerSample.cc', 'OptParser.cc']
objs = local_env.Object(srcs)
objs.extend(cobjs)

if '_CONFIG_' in local_env["CPPDEFINES"] :
    configSrcs = 'ConfigServiceListenerImpl.cc'
    configObjs = local_env.Object(configSrcs)
    objs.extend(configObjs)

if '_CONTROLPANEL_' in local_env["CPPDEFINES"] : 
    local_env.Append(CPPPATH = local_env.Dir('generated').srcnode())
    local_env.Append(CPPPATH = local_env.Dir('provided').srcnode())

    genobjs = local_env.SConscript('generated/SConscript', {'env': local_env})
    providedobjs = local_env.SConscript('provided/SConscript', {'env': local_env})
   
    objs.extend(genobjs)
    objs.extend(providedobjs)
    
if '_TESTMODE_' in local_env["CPPDEFINES"] :
    notifSrcs = ['NotificationReceiverImpl.cc', 'NotificationTesterImpl.cc']
    notifObjs = local_env.Object(notifSrcs)
    objs.extend(notifObjs)

if '_ONBOARDING_' in local_env["CPPDEFINES"] :
    onboardingSrcs = 'OnboardingControllerImpl.cc'
    onboardingObjs = local_env.Object(onboardingSrcs)
    objs.extend(onboardingObjs)

local_env.Install('$SAMPLE_APPS_DISTDIR/bin', 'FactoryServerSample.conf')
local_env.Install('$SAMPLE_APPS_DISTDIR/bin', 'ServerSample.conf')
prog = local_env.Program('ServerSample', objs)

Return('prog')
