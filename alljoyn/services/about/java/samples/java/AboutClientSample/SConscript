# Copyright (c) 2013-2014, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('sample_env')

classes = sample_env.Java(sample_env.Dir('$OBJDIR_ABOUT/java/samples/classes').srcnode(), 'src')
sample_env.Depends(classes, sample_env['dep_jars'])
# scons does not have support for Java 7 yet.  When building with Java 7 an
# additional class is generated that scons is unaware of. So we apply a work around
# to clean the class and to make sure the class is included in the resulting jar
# file
sample_env.Clean(classes, sample_env.Dir('$OBJDIR_ABOUT/java/samples/classes').srcnode())

jar = sample_env.Jar(target = 'about_client_sample_legacy', source = [sample_env.Dir('$OBJDIR_ABOUT/java/samples/classes').srcnode(), 'MANIFEST.MF'], JARCHDIR='$SOURCE')

Return('jar')