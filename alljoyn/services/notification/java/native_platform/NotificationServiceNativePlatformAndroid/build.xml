<?xml version="1.0" encoding="UTF-8"?>
 <project name="NSNativePlatformAndr" basedir="." default="produce_ui_sample">
     
     
     
    <!--  ========================================================   -->
    
    
        <!-- The local.properties file is created and updated by the 'android' tool.
         It contains the path to the SDK. It should *NOT* be checked into
         Version Control Systems. -->
	    <property file="local.properties" />
	
	    <!-- The ant.properties file can be created by you. It is only edited by the
	         'android' tool to add properties to it.
	         This is the place to change some Ant specific build properties.
	         Here are some properties you may want to change/update:
	
	         source.dir
	             The name of the source directory. Default is 'src'.
	         out.dir
	             The name of the output directory. Default is 'bin'.
	
	         For other overridable properties, look at the beginning of the rules
	         files in the SDK, at tools/ant/build.xml
	
	         Properties related to the SDK location or the project target should
	         be updated using the 'android' tool with the 'update' action.
	
	         This file is an integral part of the build system for your
	         application and should be checked into Version Control Systems.
	
	         -->
	    <property file="ant.properties" />
	
	    <!-- if sdk.dir was not set from one of the property file, then
	         get it from the ANDROID_HOME env var.
	         This must be done before we load project.properties since
	         the proguard config can use sdk.dir -->
	    <property environment="env" />
	    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
	        <isset property="env.ANDROID_HOME" />
	    </condition>
	
	    <!-- The project.properties file is created and updated by the 'android'
	         tool, as well as ADT.
	
	         This contains project specific properties such as project target, and library
	         dependencies. Lower level build properties are stored in ant.properties
	         (or in .classpath for Eclipse projects).
	
	         This file is an integral part of the build system for your
	         application and should be checked into Version Control Systems. -->
	    <loadproperties srcFile="project.properties" />
	
	    <!-- quick check on sdk.dir -->
	    <fail
	            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
	            unless="sdk.dir"
	    />
    
    
    <!-- =============================================================  -->
     
     <property name="src.dir"     value="src" />
     <property name="libs.dir"    value="libs"/>
     <property name="build.dir"   value="build"/>
     <property name="classes.dir" value="${build.dir}/classes" />
     <property name="deploy.dir"  value="${build.dir}/deploy" />
     <property name="andr.compile.dir" value="${sdk.dir}/platforms/${target}"/>
     
     <property name="commons.dir" value="../../NotificationServiceCommons/" />
     <property name="commons.ant" value="${commons.dir}/build.xml"/> 
     
     <property name="notifsrvc.dir" value="../../NotificationService" />
     <property name="notifsrvc.ant" value="${notifsrvc.dir}/build.xml"/> 
     
     <!-- For building the sample apps  -->
     <property name="andrsample_ui.dir" value="../../sample_applications/android/NotificationServiceUISample" />
     <property name="andrsample_ui.dir.lib" value="${andrsample_ui.dir}/libs/"/>
     
     <property name="docs.lib" value="docs"/>
          
     <!-- ***************************************************************** -->
     
     <target name="clean">
         <echo message="Cleaning ${ant.project.name} ${build.dir} directory..."/>
         <delete dir="${build.dir}" includeemptydirs="true" quiet="true"/>
         
         <echo message="Calling commons ant to cleanup on ${commons.ant}"/>
         <ant antfile="${commons.ant}" target="clean" inheritAll="false"/>
         
         <echo message="Calling NotificationService ant to cleanup on ${notifsrvc.ant}"/>
         <ant antfile="${notifsrvc.ant}" target="clean" inheritAll="false"/>
     </target>
     
     <target name="init" depends="clean">
         <echo message="${ant.project.name} Starting init..."/>
         <echo message="${ant.project.name} Create build directory"/>
         <mkdir dir="${build.dir}"/>
         <echo message="${ant.project.name} Create ${classes.dir} directory"/>
         <mkdir dir="${classes.dir}"/>
         <echo message="${ant.project.name} Create ${deploy.dir} directory"/>
         <mkdir dir="${deploy.dir}"/>         
         
         <echo message="${ant.project.name} Copy all content of ${libs.dir} into ${deploy.dir}"/>           
         <copy todir="${deploy.dir}" >
                <!-- We don't want to provide android native JARs as a part of our own deploy,
                     therefor we filter them out
                -->
               <fileset dir="${libs.dir}" excludes= "android*" />
         </copy>                         
     </target>  
     
    <target name="compile" depends="init" description="Compiles the code">
         <echo message="${ant.project.name} starting compilation..."/>
         
         <echo message="Calling Commons ${commons.ant} to create jar" />
         <ant antfile="${commons.ant}" target="jar" inheritAll="false"/>
        
         <echo message="${ant.project.name} Copying all jars from commons ${commons.dir}/${deploy.dir} into ${ant.project.name} ${deploy.dir}" />
         <copy todir="${deploy.dir}" >
              <fileset dir="${commons.dir}/${deploy.dir}" includes="**/*"/>
         </copy>
         
         <!-- 
            In order to compile NotificationService project we need to provide it with 
            our native AJ JAR and NSCommons to prevent it being compiled twice.
            First of all we call NotificationService init command to create the folders tree.
            Afterwards we take from NotificationService/deploy all its JARs
          -->
         <echo message="${ant.project.name} Calling NotificationService ${notifsrvc.ant} init to create build folders tree" />
         <ant antfile="${notifsrvc.ant}" target="init" inheritAll="false"/>
          
         <echo message="${ant.project.name} Copying AllJoyn.JAR and NSCommons jars to the ${notifsrvc.dir}/${build.dir}/libs" />
         <copy todir="${notifsrvc.dir}/${build.dir}/libs" >
              <fileset dir="${deploy.dir}" includes="*alljoyn*,*Commons.jar"/>
         </copy>
         <echo message="${ant.project.name} Calling NotificationService ${notifsrvc.ant} to create JAR" />
         <ant antfile="${notifsrvc.ant}" target="jar" inheritAll="false"/>
         
         <echo message="${ant.project.name} Copying all jars from NotificationService ${notifsrvc.dir}/${deploy.dir} into ${ant.project.name} ${deploy.dir}"/>
         <copy todir="${deploy.dir}" >
              <fileset dir="${notifsrvc.dir}/${deploy.dir}" includes="**/*"/>
         </copy>        
         
          <path id="classpath">
                
                <fileset dir="${deploy.dir}" includes="**/*.jar"/>
                <fileset dir="${andr.compile.dir}" includes="**/*.jar"/>
          </path>
         
          <echo message="${ant.project.name} Compile project"/>
          <!--
             We don't want to compile android classes with its dependencies.
             Compile just org.alljoyn.ioe.... package. 
          -->
          <javac source="1.6" target="1.6" srcdir="${src.dir}/org/alljoyn" destdir="${classes.dir}" classpathref="classpath" debug="true" includeantruntime="false"/>
     </target>

     <target name="jar" depends="compile">               
          <echo message="${ant.project.name} Creates compiled JAR file"/>
          <jar destfile="${deploy.dir}/${ant.project.name}.jar" basedir="${classes.dir}" />
          <echo message="${ant.project.name}_src Creates JAR file of sources"/>
          <jar destfile="${deploy.dir}/${ant.project.name}_src.jar" basedir="${src.dir}" />
     </target>
     
     <!--
        For DEV only, copies all the content of ${deploy.dir} to ${andrsample.dir.lib} 
      -->
     <target name="produce_ui_sample" depends="jar">
         <echo message="${ant.project.name} Create the UISampleApp, build APK"/>
         <copy todir="${andrsample_ui.dir.lib}" >
                <fileset dir="${deploy.dir}" includes="**/*"/>
                <!-- The NotifictionServiceUI sample depends on the android-support-v4.jar -->
                <fileset dir="${sdk.dir}/extras/android/support/v4" includes="**/*.jar"/>
         </copy>
         
         <ant antfile="${andrsample_ui.dir}/build.xml" target="debug" inheritAll="false"/>
     </target>
     
          
     <target name="jdoc" description="${ant.project.name} Creates JAVADOC">
          <echo message="${ant.project.name} Creates JavaDoc for the project"/>
        
          <delete dir="${docs.lib}" includeemptydirs="true" quiet="true"/>
          
          <javadoc
               destdir="${docs.lib}"
               author="false"
               version="false"
               use="true"
               windowtitle="Notification Service">
    
               <classpath id="classpath">               
	                <fileset dir="${libs.dir}" includes="*/**"/>
	                <fileset dir="${andr.compile.dir}" includes="**/*.jar"/>
	           </classpath>
              
               <fileset dir="${commons.dir}/src" defaultexcludes="yes">
                     <include name="*/**"/>
               </fileset>
              
               <fileset dir="${notifsrvc.dir}/src" defaultexcludes="yes">
                    <include name="org/alljoyn/ns/**"/>
                    <exclude name="org/alljoyn/ns/transport/**"/>
                    <exclude name="org/alljoyn/ns/PayloadAdapter.java"/>
               </fileset>
               
               
               <fileset dir="src" defaultexcludes="yes">
                     <include name="org/alljoyn/ns/**"/>
               </fileset>
            
               <doctitle><![CDATA[<h1> Notification Service </h1>]]></doctitle> 
               <bottom><![CDATA[<small>AllJoyn Notification Java API Reference Manual Version 14.12.00<br/>Copyright AllSeen Alliance.<br/><b>THIS DOCUMENT AND ALL INFORMATION CONTAIN HEREIN ARE PROVIDED ON AN "AS-IS" BASIS WITHOUT WARRANTY OF ANY KIND</b>.<br/><b>MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION</b><br/></small>]]></bottom> 
         </javadoc>
     </target>
     
 </project>
